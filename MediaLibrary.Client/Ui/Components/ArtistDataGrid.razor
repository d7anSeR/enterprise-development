@inject IMediaLibraryApiWrapper MediaLibraryApi
@inject NavigationManager NavManager

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                
                <h2><MudIcon Icon="@Icons.Material.Filled.Person2" Class="icon" />  Артисты</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Blazorise.Color.Primary" Clicked="OpenCreateModal">
                    Добавить Артиста
                </Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="DtoArtistDetails"
                  Data="_artists"
                  Responsive
                  Striped>
            <DataGridColumns>
                <DataGridColumn Width="150px"
                                TItem="DtoArtistDetails"
                                Field="@nameof(DtoArtistDetails.Id)"
                                Caption="Действия">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Blazorise.Color.Primary">
                                Действия
                            </DropdownToggle>
                            <DropdownMenu>
                                <DropdownItem Clicked="() => OpenEditPageAsync(context)">
                                    Редактировать
                                </DropdownItem>
                                <DropdownItem Clicked="() => DeleteGradeAsync(context)">
                                    Удалить
                                </DropdownItem>
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="DtoArtistDetails"
                                Field="@nameof(DtoArtistDetails.Name)"
                                Caption="Никнейм артиста">
                </DataGridColumn>
                <DataGridColumn TItem="DtoArtistDetails"
                                Field="@nameof(DtoArtistDetails.Description)"
                                Caption="Краткое описание">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<ArtistCreateModal @ref="ArtistCreateModal" OnArtistAdded="@HandleArtistAdded" />

@code {
    [Parameter]
    public EventCallback OnDataChanged { get; set; }

    private List<DtoArtistDetails> _artists = new();


    private ArtistCreateModal ArtistCreateModal { get; set; } = new();

    private async Task LoadArtists()
    {
        var response = await MediaLibraryApi.GetAllArtist();
        if (response != null)
        {
            _artists = response.ToList();
        }
    }


    protected override async Task OnInitializedAsync()
    {
        await LoadArtists();
        await base.OnInitializedAsync();
    }

    private void OpenEditPageAsync(DtoArtistDetails context)
    {
        NavManager.NavigateTo($"artists/{context.Id}");
    }

    private async Task DeleteGradeAsync(DtoArtistDetails context)
    {
        await MediaLibraryApi.DeleteArtist(context.Id);
        await LoadArtists();
        await OnDataChanged.InvokeAsync();
    }

    private async Task HandleArtistAdded()
    {
        await LoadArtists();
        await OnDataChanged.InvokeAsync();
    }

    private async Task OpenCreateModal() => await ArtistCreateModal.Show();

}